 [CmdletBinding(SupportsShouldProcess=$true)]
      param
      (
        [Parameter(Mandatory=$False,
        ValueFromPipeline=$True,
        ValueFromPipelineByPropertyName=$True,
        HelpMessage='¿Site collection origen?')]
        [string]$path,
        [Parameter(Mandatory=$False,
        ValueFromPipeline=$True,
        ValueFromPipelineByPropertyName=$True,
        HelpMessage='Url del site de la community')]
        [String]$url,
        [Parameter(Mandatory=$False,
        ValueFromPipeline=$True,
        ValueFromPipelineByPropertyName=$True,
        HelpMessage='nombre de la lista donde estan los miembros de la communitity/categoria')]
        [string]$membersListTitle

        )
#TFGR

 <#
    .Synopsis
       Add users from a site collection to another site collection with out-of-the-box community template, and add these users as members of the community
    
    .EXAMPLE
       add-membersToCommunities.ps1 -path "C:\Scripts\Communities\users.xml" -url "https://pp-****.hi.inet" -membersListTitle "Community Members"
                        
    .NOTES
       $path is a [string] varible which contains the path of a file generated by the cmd-let get-spuser -web "web origin"|export-clixml -path c:\scripts\communities\users.xml
       Written by Jorge Martinez, 
       I take no responsibility for any issues caused by this script.
    .FUNCTIONALITY
        Add users from a site collection to another site collection with out-of-the-box community template, and add these users as members of the community    
#>

#Añadimos los cmd-let propios de sharepoint
Add-PSSnapin Microsoft.SharePoint.PowerShell -EA SilentlyContinue

# Main #

# Importamos los usuarios
$currentusers=Import-Clixml -Path $path

# Defininmos las variables
$web=get-spweb -Identity $url
$counter=$currentusers.count
$lists=$web.lists
$membersList=$Lists|?{$_.Title -eq $membersListTitle}

#Para cada usuario importado
foreach ($spuser in $currentusers){
#SI lo hacemos en modo verbose mostramos el contador de elementos que faltan por procesar y el usuario que se va a procesar a continuación
write-verbose $counter
$spuser.DisplayName
    
#Almacenamos los valores de email y login en sendas variables
$email=$spuser.email
$loginName=$spuser.UserLogin

#creamos el usuario y lo almacenamos en la variable $user
$user = $web.EnsureUser($loginName) 

#capturamos el ID único de ese usuario en el site nuevo.
$iduser = $user.ID

#asiganmos los valores y actualizamos el objeto $user
$user.DisplayName=$spuser.DisplayName
$user.name=$spuser.DisplayName
$user.Update()

#añadimos el usuario una vez que esta creado a la lista de miembros de la comunidad
$newitem=$membersList.items.add()                                         
$newitem["Member"]=$user.ID                                               
$newitem.Update()                                                         
$membersList.update() 

#reducimos el contador en uno               
$counter-=1

}

#Como el contador de miembros no se actuliza automaticamente, lo actualizamos.
$web.AllowUnsafeUpdates=$True
$web.AllProperties["Community_MembersCount"] = ($membersList.ItemCount  ).ToString();
$web.Update()
$web.AllowUnsafeUpdates=$False                        
$web.Dispose()

 
 
         

                            
    
    
    
    
    
    